[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Charlotte Brault. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brault C (2025). HRSWGS: Hard Red Spring Wheat breeding genomic selection toolbox. R package version 0.1.0, https://chabrault.github.io/HRSWGS/.","code":"@Manual{,   title = {HRSWGS: Hard Red Spring Wheat breeding genomic selection toolbox},   author = {Charlotte Brault},   year = {2025},   note = {R package version 0.1.0},   url = {https://chabrault.github.io/HRSWGS/}, }"},{"path":"/reference/GGAIN.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate genetic gain for selected traits — GGAIN","title":"Estimate genetic gain for selected traits — GGAIN","text":"Estimate genetic gain selected traits","code":""},{"path":"/reference/GGAIN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate genetic gain for selected traits — GGAIN","text":"","code":"GGAIN(data, traits, first_year)"},{"path":"/reference/GGAIN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate genetic gain for selected traits — GGAIN","text":"data data frame columns traits first year evaluation traits character vector trait names first_year character vector column names first year evaluation. Best first year subtracted minimal first year estimation percentage change","code":""},{"path":"/reference/GGAIN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate genetic gain for selected traits — GGAIN","text":"data frame columns trait, intercept, slope, R2.adj, pvalue percentage change","code":""},{"path":"/reference/compute_GP_allGeno.html","id":null,"dir":"Reference","previous_headings":"","what":"Run genomic prediction on all genotypes, output predicted values — compute_GP_allGeno","title":"Run genomic prediction on all genotypes, output predicted values — compute_GP_allGeno","text":"Run genomic prediction genotypes, output predicted values","code":""},{"path":"/reference/compute_GP_allGeno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run genomic prediction on all genotypes, output predicted values — compute_GP_allGeno","text":"","code":"compute_GP_allGeno(   geno,   pheno,   traits,   GP.method,   runCV = FALSE,   testSetGID = NULL,   nreps = 10,   nfolds = 10,   h = 1,   nb.mtry = 10,   nIter = 6000,   burnIn = 1000,   ntree = 100,   p2d.temp = NULL,   nb.cores = 1,   p2f.stats.cv = NULL,   p2f.pred = NULL,   verbose = 1 )"},{"path":"/reference/compute_GP_allGeno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run genomic prediction on all genotypes, output predicted values — compute_GP_allGeno","text":"geno genomic data genotypes row (GID rownames) marker columns. Values column centered scaled. pheno phenotypic data genotypes row (GID column) traits columns traits character vector trait names, must correspond `pheno` column names GP.method character vector genomic prediction methods use, must one \"rrBLUP\", \"RKHS\", \"BayesA\", \"BayesB\" runCV logical, TRUE, run cross-validation common genotypes `pheno` `geno`, default FALSE nreps number repetitions cross-validation, default 10 nfolds number folds cross-validation, default 10 h bandwith parameter RKHS, default 1. nb.mtry number randomly selected variables split RandomForest, default 10 nIter number iterations RKHS, default 6000 burnIn number burn-iterations RKHS, default 1000 ntree number trees RandomForest, default 100 p2d.temp path directory export temporary genomic prediction results, default NULL (cause error parallelization NULL). nb.cores number cores parallelize computation, default 1 (parallelization) p2f.stats.cv path file export cross-validation genomic prediction results, default NULL p2f.pred path file export genotypic values genomic prediction, default NULL verbose integer, level verbosity, default 1 testSetID GID test set genotypes, NULL, provide predicted genotypic values genotypes `geno`","code":""},{"path":"/reference/compute_GP_allGeno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run genomic prediction on all genotypes, output predicted values — compute_GP_allGeno","text":"data frame predicted values genotypes traits","code":""},{"path":[]},{"path":"/reference/compute_GP_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute genomic prediction different methods — compute_GP_methods","title":"Compute genomic prediction different methods — compute_GP_methods","text":"Compute genomic prediction different methods","code":""},{"path":"/reference/compute_GP_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute genomic prediction different methods — compute_GP_methods","text":"","code":"compute_GP_methods(   geno,   pheno,   traits,   GP.method,   nreps = 10,   nfolds = 10,   h = 1,   nb.mtry = 10,   nIter = 6000,   burnIn = 1000,   ntree = 100,   p2d.temp = NULL,   nb.cores = 1,   p2f.stats = NULL )"},{"path":"/reference/compute_GP_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute genomic prediction different methods — compute_GP_methods","text":"geno genomic data genotypes row (GID rownames) marker columns. Values column centered scaled. pheno phenotypic data genotypes row (GID column) traits columns. Phenotypic value corrected year location effects beforehand. traits character vector trait names GP.method character vector genomic prediction methods use nreps number repetitions cross-validation, default 10 nfolds number folds cross-validation, default 10 h bandwith parameter RKHS, default 1. multiple values provided, method RKHS Kernel Averaging. nIter number iterations RKHS, default 6000 burnIn number burn-iterations RKHS, default 1000 ntree number trees RandomForest, default 100 p2d.temp path directory export temporary genomic prediction results, default NULL (cause error parallelization NULL). nb.cores number cores parallelize computation, default 1 (parallelization) p2f.stats path file export genomic prediction results, default NULL","code":""},{"path":"/reference/concordance_match_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Concordance of names between reference and match data Matching of names will be done based on the spelling of the names, without punctuation. — concordance_match_name","title":"Concordance of names between reference and match data Matching of names will be done based on the spelling of the names, without punctuation. — concordance_match_name","text":"Concordance names reference match data Matching names done based spelling names, without punctuation.","code":""},{"path":"/reference/concordance_match_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concordance of names between reference and match data Matching of names will be done based on the spelling of the names, without punctuation. — concordance_match_name","text":"","code":"concordance_match_name(   ref.name = NULL,   match.name,   allowNoMatch = TRUE,   corresp.list = NULL,   verbose = 1 )"},{"path":"/reference/concordance_match_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concordance of names between reference and match data Matching of names will be done based on the spelling of the names, without punctuation. — concordance_match_name","text":"ref.name character vector reference names match.name character vector names match allowNoMatch logical, keep values match.name even match, default TRUE corresp.list named list correspondence names, correct spelling name possible synonym character vector, default NULL, provided, add new correspondence list. conflict ref.names corresp.list, name corresp.list used. verbose integer, level verbosity, default 1","code":""},{"path":"/reference/concordance_match_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concordance of names between reference and match data Matching of names will be done based on the spelling of the names, without punctuation. — concordance_match_name","text":"list 3 elements: correspondence data frame, updated correspondence list, vector new names applied match name.","code":""},{"path":"/reference/data_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print data summary for numeric variables using gtsummary — data_summary","title":"Print data summary for numeric variables using gtsummary — data_summary","text":"Print data summary numeric variables using gtsummary","code":""},{"path":"/reference/data_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print data summary for numeric variables using gtsummary — data_summary","text":"","code":"data_summary(data, variables = NULL, by = NULL, add.pval = T)"},{"path":"/reference/data_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print data summary for numeric variables using gtsummary — data_summary","text":"data data frame numeric variables variables character vector numeric variable names include summary character vector variable names group add.pval logical, TRUE, add p-values summary table","code":""},{"path":"/reference/data_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print data summary for numeric variables using gtsummary — data_summary","text":"gtsummary object","code":""},{"path":"/reference/format_curate_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Format and curate vcf file — format_curate_vcf","title":"Format and curate vcf file — format_curate_vcf","text":"Format curate vcf file","code":""},{"path":"/reference/format_curate_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format and curate vcf file — format_curate_vcf","text":"","code":"format_curate_vcf(   vcf.p2f = NULL,   matrix.gt = NULL,   mrk.info = NULL,   corresp.geno.name = NULL,   p2f.export.vcf = NULL,   IDnum = FALSE,   remove.chrUkn = TRUE,   check.mrk.dups = TRUE,   remove.nonPolyMrk = TRUE,   tresh.heterozygous = NULL,   check.geno.dups = TRUE,   thresh.NA.ind = 0.5,   thresh.NA.mrk = 0.5,   format.names = FALSE,   concordance.function = FALSE,   corresp.geno.list = NULL,   imputation = NULL,   p2f.beagle = NULL,   thresh.MAF = NULL,   verbose = 1 )"},{"path":"/reference/format_curate_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format and curate vcf file — format_curate_vcf","text":"vcf.p2f path vcf file matrix.gt matrix genotypes, must contains CHROM POS columns, default NULL mrk.info data frame marker information pulled vcf, columns CHROM, POS, ID, REF, ALT, QUAL, FILTER, INFO, FORMAT, default NULL. Needed `vcf.p2f` provided `p2f.export.vcf` null. corresp.geno.name table correspondence genotype names, first column name matched second one updated name. p2f.export.vcf path export curated vcf file, default NULL (export), useful Beagle imputation. IDnum logical, remove prefix idxx. genotype name, default FALSE remove.chrUkn logical, remove markers unknown chromosome, default TRUE check.mrk.dups logical, check duplicated markers, default TRUE remove.nonPolyMrk logical, remove non-segregating markers, default TRUE tresh.heterozygous numeric, threshold maximum proportion heterozygous genotypes, default NULL check.geno.dups logical, check duplicated genotypes, default TRUE thresh.NA.ind numeric, threshold maximum proportion missing values individuals, default 0.5 thresh.NA.mrk numeric, threshold maximum proportion missing values markers, default 0.5 format.names logical, use custom function transform genotype names, default FALSE imputation character, impute missing values kNNI Beagle impute, default NULL (imputation) p2f.beagle path export file Beagle imputation, default NULL thresh.MAF numeric, threshold minor allele frequency, default NULL verbose numeric, level verbosity, default 1","code":""},{"path":"/reference/format_curate_vcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format and curate vcf file — format_curate_vcf","text":"data frame 0/1/2 values curated vcf file, genotypes row markers columns.","code":""},{"path":"/reference/format_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Format accession names — format_names","title":"Format accession names — format_names","text":"Format accession names","code":""},{"path":"/reference/format_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format accession names — format_names","text":"","code":"format_names(   names,   toupper = TRUE,   dashToUnderscore = FALSE,   pedigree = FALSE,   verbose = FALSE )"},{"path":"/reference/format_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format accession names — format_names","text":"names character vector accession names toupper logical, set upper case, default TRUE dashToUnderscore logical, transform dash underscore, default FALSE pedigree character vector pedigree? TRUE, remove slash strings verbose logical, default FALSE","code":""},{"path":"/reference/format_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format accession names — format_names","text":"list initial corrected names","code":""},{"path":"/reference/format_phenot.html","id":null,"dir":"Reference","previous_headings":"","what":"Format phenotypic data from GrainGenes (Excel table) — format_phenot","title":"Format phenotypic data from GrainGenes (Excel table) — format_phenot","text":"Format phenotypic data GrainGenes (Excel table)","code":""},{"path":"/reference/format_phenot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format phenotypic data from GrainGenes (Excel table) — format_phenot","text":"","code":"format_phenot(p2d, years, locs, traits, cols2rem = NULL, distMatchTrait = 8)"},{"path":"/reference/format_phenot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format phenotypic data from GrainGenes (Excel table) — format_phenot","text":"p2d path directory tables saved years numeric vector years look locs character vector tab names look (including Entry) location names identify trial. several names corresponding one trial, repeat different versions vector add final name vector name. traits character vector trait names look . several names corresponding one trait, name different versions use vector name sought version. example: traits=c(\"VSK\",\"Heading\",\"FDK\"); names(traits)=c(\"VSK\",\"HD\",\"VSK\") cols2rem character vector column names remove, avoid bad matching distMatchTrait numeric value, distance string matching. Default 8. Increased distance lead matching prone errors.","code":""},{"path":"/reference/format_phenot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format phenotypic data from GrainGenes (Excel table) — format_phenot","text":"list 4 components: - var.match.info: data frame variable matching - sheet.match.info: data frame sheet matching (finding relevant tabs) - phenot: data frame combined phenotypic data years locations - entry.info: data frame combined genotype information","code":""},{"path":"/reference/format_phenot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format phenotypic data from GrainGenes (Excel table) — format_phenot","text":"","code":"# p2d <- here(\"data\",\"URSN_tables\") out <- format_phenot(p2d=p2d, years=year_ranges, locs=locs2check,                      traits=traits2check,                       cols2rem=c('DISK',\"VRI\",                                  \"VIBE FDK *\",\"VIBE_FDK\")) #> Loading required package: stringr #> Warning: there is no package called ‘stringr’ #> Loading required package: janitor #> Warning: there is no package called ‘janitor’ #> Loading required package: readxl #> Warning: there is no package called ‘readxl’ #> Loading required package: stringdist #> Warning: there is no package called ‘stringdist’ #> Loading required package: dplyr #> Warning: there is no package called ‘dplyr’ #> Error: object 'traits2check' not found"},{"path":"/reference/getFolds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cross-validation folds — getFolds","title":"Get cross-validation folds — getFolds","text":"Get cross-validation folds","code":""},{"path":"/reference/getFolds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cross-validation folds — getFolds","text":"","code":"getFolds(index, nb.folds = 5, seed = NULL)"},{"path":"/reference/getFolds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cross-validation folds — getFolds","text":"index length total set select , numeric vector length 1 nb.folds number fold divide, default 5 seed (optional) reproducibility, set seed.","code":""},{"path":"/reference/getFolds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cross-validation folds — getFolds","text":"list testing set indexes fold.","code":""},{"path":"/reference/setup_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup prediction scenarios — setup_scenarios","title":"Setup prediction scenarios — setup_scenarios","text":"Setup prediction scenarios","code":""},{"path":"/reference/setup_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup prediction scenarios — setup_scenarios","text":"","code":"setup_scenarios(   myPheno,   scenario,   envs.train = NULL,   envs.pred = NULL,   ignore.genos = NULL,   traits = NULL,   genos = NULL,   prop.CVS1 = 0.8 )"},{"path":"/reference/setup_scenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup prediction scenarios — setup_scenarios","text":"myPheno data frame containing least following columns: gid (genotype identifier), env, value (trait phenotype) scenario one knEnv, knLoc.knYr, knLoc.nYr, nLoc.knYr, nLoc.nYr. knEnv known environment, including sample observations testing environment, well environments, knLoc.knYr known location, known year, knLoc.nYr known location / unknown year, nLoc.knYr unknown location, known year, nLoc.nYr unknown location / unknown year. envs.train (optional) restriction environments training set, provided environments considered envs.pred (optional) restriction environments testing set, provided environments considered ignore.genos (optional) character vector genotypes exclude testing set, including training set, typically check genotypes traits (optional) character vector trait column(s) genos (optional) character vector restricted genotype list, typically genotyped lines. prop.CVS1 numeric, proportion genotypes testing set scenario knEnv, default 0.8.","code":""},{"path":"/reference/setup_scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup prediction scenarios — setup_scenarios","text":"list one lement per testing (environment) set. Within testing set, list training environment, testing environment, genotypes training testing sets, phenotypic data training testing sets.","code":""}]
